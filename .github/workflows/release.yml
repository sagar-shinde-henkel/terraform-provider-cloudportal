name: Release Terraform Provider

on:
  push:
    tags:
      - "v*.*.*"

env:
  TF_REGISTRY_API_TOKEN: ${{ secrets.TF_REGISTRY_API_TOKEN }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  PROVIDER_NAMESPACE: "sagar-shinde-henkel"
  PROVIDER_NAME: "cloudportal"

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    environment: release

    steps:
      - name: Validate Tag Format
        run: |
          if [[ ! $GITHUB_REF =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Tag must follow semantic versioning (vX.Y.Z)"
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Install tfplugindocs
        run: go install github.com/hashicorp/terraform-plugin-docs/cmd/tfplugindocs@latest

      - name: Generate Terraform documentation
        run: tfplugindocs

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gpg jq

      - name: Import GPG Key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Verify GPG Setup
        run: |
          gpg --list-secret-keys --keyid-format LONG
          echo "Test signing verification:"
          echo "test" | gpg --clearsign --local-user "${{ steps.import_gpg.outputs.fingerprint }}"

      - name: Clean dist directory
        run: rm -rf dist || true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GORELEASER_SKIP_VALIDATE: true
          GORELEASER_SKIP_GIT_DIRTY: true
