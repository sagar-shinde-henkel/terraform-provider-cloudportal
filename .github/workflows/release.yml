name: Release Terraform Provider

on:
  push:
    tags:
      - "v*.*.*"

env:
  TF_REGISTRY_API_TOKEN: ${{ secrets.TF_REGISTRY_API_TOKEN }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  PROVIDER_NAMESPACE: "sagar-shinde-henkel"
  PROVIDER_NAME: "cloudportal"

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    environment: release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gpg

      - name: Import GPG Key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Verify GPG Setup
        run: |
          gpg --list-secret-keys --keyid-format LONG
          echo "Test signing verification:"
          echo "test" | gpg --clearsign --local-user "${{ steps.import_gpg.outputs.fingerprint }}"

      - name: Clean dist directory
        run: rm -rf dist || true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Verify Release Assets
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          cd dist/{{ .ProjectName }}_{{ .Version }}/{{ .Os }}_{{ .Arch }}
          
          # Verify SHA256SUMS signature
          gpg --verify ${PROVIDER_NAME}_${VERSION}_SHA256SUMS.sig ${PROVIDER_NAME}_${VERSION}_SHA256SUMS
          
          # Verify checksums match binaries
          sha256sum -c ${PROVIDER_NAME}_${VERSION}_SHA256SUMS

      - name: Publish to Terraform Registry
        if: success()
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Publishing v$VERSION to Terraform Registry"
          
          # Create provider version
          curl -X POST \
            -H "Authorization: Bearer $TF_REGISTRY_API_TOKEN" \
            -H "Content-Type: application/vnd.api+json" \
            -d '{
              "data": {
                "type": "registry-provider-versions",
                "attributes": {
                  "version": "'"$VERSION"'",
                  "key-id": "'"${{ steps.import_gpg.outputs.fingerprint }}"'"
                }
              }
            }' \
            "https://registry.terraform.io/v2/providers/sagar-shinde-henkel/cloudportal/versions"

          # Upload all provider binaries
          for file in dist/*.zip; do
            PLATFORM=$(basename $file | cut -d_ -f3- | sed 's/.zip$//')
            echo "Uploading $PLATFORM binary..."
            
            curl -X POST \
              -H "Authorization: Bearer $TF_REGISTRY_API_TOKEN" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$file" \
              "https://registry.terraform.io/v2/providers/$PROVIDER_NAMESPACE/$PROVIDER_NAME/versions/$VERSION/platforms/$PLATFORM"
          done