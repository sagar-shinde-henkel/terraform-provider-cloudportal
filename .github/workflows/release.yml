name: Release Terraform Provider

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on semantic version tags (e.g., v1.2.3)

env:
  # Global environment variables
  env:
  TF_REGISTRY_API_TOKEN: ${{ secrets.TF_REGISTRY_API_TOKEN }}
  GPG_FINGERPRINT: ${{ secrets.GPG_FINGERPRINT }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  HASHICORP_API_TOKEN: ${{ secrets.TF_REGISTRY_API_TOKEN }}

permissions:
  contents: write
  id-token: write  # Required for HashiCorp registry auth

jobs:
  release:
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for full Git history

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gpg

      - name: Import GPG Key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}  # Your armored private key
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          # Disable passphrase prompts (critical for keys without passphrase)
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          gpgconf --kill gpg-agent  # Restart agent to apply changes
      
      - name: Test GPG Signing
        run: |
          echo "test" | gpg --clearsign --batch --yes  # Should NOT prompt for passphrase

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Inherits GPG_FINGERPRINT and GPG_PASSPHRASE from global env

      - name: Publish to Terraform Registry
        if: success()
        env:
          TF_REGISTRY_API_TOKEN: ${{ secrets.TF_REGISTRY_API_TOKEN }}
          GPG_FINGERPRINT: ${{ secrets.GPG_FINGERPRINT }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          curl -X POST \
            -H "Authorization: Bearer $TF_REGISTRY_API_TOKEN" \
            -H "Content-Type: application/vnd.api+json" \
            -d '{
              "data": {
                "type": "registry-provider-versions",
                "attributes": {
                  "version": "'"$VERSION"'",
                  "key-id": "'"$GPG_FINGERPRINT"'"
                }
              }
            }' \
            "https://registry.terraform.io/v2/providers/terrafprm-provider-cloudportal/cloudportal/versions"